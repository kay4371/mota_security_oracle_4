
const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const bodyParser = require('body-parser');
const logger = require('morgan');
const methodOverride = require('method-override');

// Database connection
//former// const uri = 'mongodb+srv://OlukayodeUser:Kayode4371@cluster0.1ejsr.mongodb.net/olukayode_sage?retryWrites=true&w=majority';

const app = express();
const uri = 'mongodb+srv://OlukayodeUser:Kayode4371@cluster0.zds6pi9.mongodb.net/?retryWrites=true&w=majority'
mongoose.connect(uri, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => console.log('db connected'))
  .catch((error) => console.error(error));

// Middleware
app.use(logger('dev'));
app.use(bodyParser.urlencoded({ extended: true }));
app.use(methodOverride('_method'));
app.use(cors());

// Define data schema and model
const myDataSchema = new mongoose.Schema({
  name: String,
  email: String,
  message: String
});

const MyData = mongoose.model('MyData', myDataSchema);

// Serve the HTML form
app.get('/', (req, res) => {
  res.send(`
    <html>
      <body>
        <form action="/save-data" method="POST">
          <label for="name">Name:</label>
          <input type="text" id="name" name="name" required><br><br>

          <label for="email">Email:</label>
          <input type="email" id="email" name="email" required><br><br>

          <label for="message">Message:</label><br>
          <textarea id="message" name="message" rows="4" cols="50" required></textarea><br><br>

          <input type="submit" value="Submit">
        </form>
      </body>
    </html>
  `);
});

// Endpoint to save data
app.post('/save-data', async function (req, res) {
  const newData = new MyData({
    name: req.body.name,
    email: req.body.email,
    message: req.body.message
  });

  try {
    await newData.save();
    res.send('Data saved successfully');
  } catch (error) {
    console.error(error);
    res.status(500).send('An error occurred while saving data');
  }
});

// // Start server
// const port = process.env.PORT || 3001;
// app.listen(port, () => console.log(`Server listening on port ${port}`));
